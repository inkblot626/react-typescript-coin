{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","fetchCoinTickers","coinId","isDarkAtom","atom","key","default","ChartBackground","styled","div","Chart","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","result","map","item","x","time_close","y","open","toFixed","high","low","close","volume","console","log","type","series","options","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","price","PriceSection","ul","PriceValue","span","props","isActive","Price","tickersData","quotes","USD","market_cap_change_24h","percent_change_30m","percent_change_1h","percent_change_12h","percent_change_24h","BackButton","Title","h1","theme","accentColor","Overview","OverviewItem","Description","p","Tabs","Tab","textColor","Loader","Container","Header","header","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","loading","history","useHistory","Helmet","name","onClick","push","rank","symbol","description","total_supply","max_supply","to","path","ToggleButton","button","shadowColor","CoinsList","li","coinsColor","bgColor","Img","img","Coins","isDark","setDarkAtom","useSetRecoilState","prev","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.f8fc21fa.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport async function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n    return fetch(`${BASE_URL}/coins/${coinId}`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n    const endDate = Math.floor(Date.now() / 1000);\r\n    const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n    return fetch(\r\n      `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then((response) => response.json());\r\n  }","import { atom } from 'recoil'\r\n\r\nexport const isDarkAtom = atom({\r\n    key: \"isDark\",\r\n    default: true,\r\n})","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nconst ChartBackground = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  color: #5e5e5e;\r\n`;\r\n\r\nconst Chart = ({ coinId }: ChartProps) => {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n\r\n  const result = data?.map(item => {\r\n    const x = new Date(item.time_close);\r\n    const y = [item.open.toFixed(2), item.high.toFixed(2), item.low.toFixed(2), item.close.toFixed(2), item.volume.toFixed(2)];\r\n    return {\r\n      x, y\r\n    }\r\n  })\r\n\r\n  console.log(result)\r\n\r\n  return (\r\n    <ChartBackground>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={\r\n            [\r\n              {\r\n                data: result\r\n              }\r\n            ]\r\n          }\r\n          options={{\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 4,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </ChartBackground>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinTickers } from \"../api\";\r\nimport { PriceData } from \"./Coin\";\r\n\r\ninterface PriceProps {\r\n  coinId: string;\r\n}\r\n\r\nconst PriceSection = styled.ul`\r\n  width: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 15px;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  li {\r\n    margin-bottom: 14px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  li h5 {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nconst PriceValue = styled.span<{ isActive?: boolean }>`\r\n  font-size: 20px;\r\n  color: ${(props) => (props?.isActive ? \"rgb(255, 0, 0)\" : \"rgb(0, 217, 100)\")};\r\n`;\r\n\r\nconst Price = ({ coinId }: PriceProps) => {\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId), {\r\n    refetchInterval: 5000,\r\n  });\r\n  return (\r\n    <PriceSection>\r\n      <li>\r\n        <h5>price :</h5>\r\n        <PriceValue>${tickersData?.quotes.USD.price.toFixed(3)}</PriceValue>\r\n      </li>\r\n      <li>\r\n        <h5>Max Change rate in last 24h :</h5>\r\n        <PriceValue isActive={tickersData!.quotes.USD.market_cap_change_24h < 0}>{tickersData?.quotes.USD.market_cap_change_24h}%</PriceValue>\r\n      </li>\r\n      <li>\r\n        <h5>Change rate (last 30 Minutes) :</h5>\r\n        <PriceValue isActive={tickersData!.quotes.USD.percent_change_30m < 0}>{tickersData?.quotes.USD.percent_change_30m}%</PriceValue>\r\n      </li>\r\n      <li>\r\n        <h5>Change rate (last 1 hours) :</h5>\r\n        <PriceValue isActive={tickersData!.quotes.USD.percent_change_1h < 0}>{tickersData?.quotes.USD.percent_change_1h}%</PriceValue>\r\n      </li>\r\n      <li>\r\n        <h5>Change rate (last 12 hours) :</h5>\r\n        <PriceValue isActive={tickersData!.quotes.USD.percent_change_12h < 0}>{tickersData?.quotes.USD.percent_change_12h}%</PriceValue>\r\n      </li>\r\n      <li>\r\n        <h5>Change rate (last 24 hours) :</h5>\r\n        <PriceValue isActive={tickersData!.quotes.USD.percent_change_24h < 0}>{tickersData?.quotes.USD.percent_change_24h}%</PriceValue>\r\n      </li>\r\n    </PriceSection>\r\n  );\r\n};\r\n\r\nexport default Price;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Route, Switch, useHistory, useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\nconst BackButton = styled.div`\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #adadad;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) => (props.isActive ? \"#efb\" : props.theme.textColor)};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\nexport interface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst Coin = () => {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>([\"info\", coinId], () => fetchCoinInfo(coinId));\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId), {\r\n    refetchInterval: 5000,\r\n  });\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  const history = useHistory();\r\n  const goHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}</title>\r\n      </Helmet>\r\n\r\n      <BackButton onClick={goHome}>⬅ Back</BackButton>\r\n      <Header>\r\n        <Title>{state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}</Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default Coin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ToggleButton = styled.button`\r\n  position: absolute;\r\n  right: 0;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  font-size: 5px;\r\n  border: none;\r\n  box-shadow: ${(props) => props.theme.shadowColor};\r\n  &:active {\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.coinsColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &: hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst coins = [\r\n  {\r\n    id: \"btc-bitcoin\",\r\n    name: \"Bitcoin\",\r\n    symbol: \"BTC\",\r\n    rank: 1,\r\n    is_new: false,\r\n    is_active: true,\r\n    type: \"coin\",\r\n  },\r\n  {\r\n    id: \"eth-ethereum\",\r\n    name: \"Ethereum\",\r\n    symbol: \"ETH\",\r\n    rank: 2,\r\n    is_new: false,\r\n    is_active: true,\r\n    type: \"coin\",\r\n  },\r\n  {\r\n    id: \"bnb-binance-coin\",\r\n    name: \"Binance Coin\",\r\n    symbol: \"BNB\",\r\n    rank: 3,\r\n    is_new: false,\r\n    is_active: true,\r\n    type: \"coin\",\r\n  },\r\n];\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nconst Coins = () => {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coin</title>\r\n      </Helmet>\r\n\r\n      <Header>\r\n        <Title>Coin</Title>\r\n        <ToggleButton onClick={toggleDarkAtom}>{isDark ? \"Light Mode\" : \"Dark Mode\"}</ToggleButton>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\nexport default Router;\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n    bgColor: \"#2f3640\",\r\n    textColor: \"#f5f6fa\",\r\n    accentColor: \"#9c88ff\",\r\n    coinsColor: \"#fff\",\r\n    shadowColor: \"1px 1px 2px 1px rgba(214, 214, 214, 0.8)\"\r\n}\r\nexport const lightTheme: DefaultTheme = {\r\n    bgColor: \"#88BDBC\",\r\n    textColor: \"#D3E0EA\",\r\n    accentColor: \"#254E58\",\r\n    coinsColor: \"#276678\",\r\n    shadowColor: \"1px 1px 2px 1px rgba(0, 0, 0, 0.8)\"\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"./atoms\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\n  html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\nbody {\r\n\tfont-weight: 300;\r\n\tfont-family: 'Source Sans Pro', sans-serif;\r\n\tbackground-color: ${(props) => props.theme.bgColor};\r\n\tcolor:${(props) => props.theme.textColor};\r\n\tline-height: 1.2;\r\n}\r\na {\r\n\ttext-decoration: none;\r\n\tcolor: inherit\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n        <GlobalStyle />\r\n        <Router />\r\n        <ReactQueryDevtools initialIsOpen={true} />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}